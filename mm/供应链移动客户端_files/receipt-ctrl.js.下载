angular.module("myApp").controller("receiptCtrl",["$scope","$timeout","$rootScope",'$istore','$modal','$state',"ReceiptService","UserInfoService",
                                                    function ($scope,$timeout,$rootScope,$istore,$modal,$state,ReceiptService,UserInfoService) {

	$scope.receipts = [];
	//初始化
    function initPage(){
    	//配置顶部可筛选状态
       $scope.status = ReceiptService.getReceiptStatus();
       $scope.payMethod = ReceiptService.getPayMethod();
       $scope.filter={};
       $scope.page = 0;
       $scope.searchVal = "";
       $scope.filter.start_date = getTime(30);

       $scope.oper = {'OperatorEntitycustomId':undefined,'OperatorEntityuserName':$is3n("全部{%=common.customerName%}",config.custid)};
       $scope.currentCompany = {'companyId':undefined,'companyName':$is3n("全部{%=common.company%}",config.custid)};
       loadData();
       getCompany();
    }
    initPage();
    
    
    
    function loadData() {
    	$scope.page = 0;
    	var filter = angular.copy($scope.filter);
        var promise = ReceiptService.getSkPaymentList(filter,$scope.page,$scope.searchVal,$scope.currentCompany.companyId,$scope.oper.OperatorEntitycustomId);
        if(promise){
        	promise.then(function(result){
        		var dataList = [];
        		if(result.status == "000"){
        			dataList =  result.dataList;
        		}
                $scope.dataList = processData(dataList);
            	refresh();
        	})
        }
    }
    
    $scope.loadMore = function () {
        $scope.page = $scope.page+1;
        var filter = angular.copy($scope.filter);
        var promise = ReceiptService.getSkPaymentList(filter,$scope.page,$scope.searchVal,$scope.currentCompany.companyId,$scope.oper.OperatorEntitycustomId);
        if(promise){
        	promise.then(function(result){
        		var dataList = [];
        		if(result.status == "000"){
        			dataList =  processData(result.dataList);
        		}
                for(var i=0;i<dataList.length; i++){
                   $scope.dataList.push(dataList[i]);
                }
            	refresh();
        	})
        }
    };
    
    function processData(dataList){
    	dataList.forEach(function(data){
        	for (var key in data){
          	   //收款金额 type-3
          	   if(key == "payAmt"){
          		 data[key] != null && data[key] != undefined ? data[key] = (Number(data[key]).moneyFormat(typeArray[3])).money() : data[key]='' ;
          	   }
          	   //待认领金额 type-3
          	   if(key == "residualAmt"){
          		 data["residualAmtUnFormat"] = data[key];
          		 data[key] != null && data[key] != undefined ? data[key] = (Number(data[key]).moneyFormat(typeArray[3])).money() : data[key]='' ;
          	   }
			}
        });
		return dataList;
    }
    
    
    
    
    
   //切换经销商和分公司
	$scope.selectDealer = function(){
     	var promise = UserInfoService.getDealerList(0);
     	promise.then(function(arys){
     		if(arys.status === "000"){
     			var all ={'customerId':undefined,'userName':$is3n("展示全部{%=common.customerName%}",config.custid)};   			
     			$scope.dealerList = arys.dealerList;
     			$scope.allPage =  Math.floor(arys.total /10);
	    	}else{
	    		$scope.dealerList = [];
	    	}
     	})
     	$scope.showpopup=true;
    }
	
    $scope.closePopup = function(){
    	$scope.showpopup=false;
    }
    
	$scope.changeDealer = function(dealer){
		dealer = {'OperatorEntitycustomId':dealer.customerId,
				'OperatorEntityuserName':dealer.userName,};
		$scope.oper = dealer;
    	/*根据经销商获取分公司*/
        loadData();
    	getCompany();
		$scope.dealerFlag = true;
    	$scope.showpopup=false;
    }
	
    function getCompany(){
    	if($rootScope.role.RoleEntityid != 1){
    		var promise = UserInfoService.getDealerCompanyList($scope.oper.OperatorEntitycustomId);
            promise.then(function(result){
            	var companyList = result.dataList;
            	var all ={'companyId':undefined,'companyName':$is3n("全部{%=common.company%}",config.custid)};
                $scope.companyList =[all].concat(companyList);
                $scope.currentCompany = all;
            });
    	}else{
        	var promise = UserInfoService.getCompanyList();
            promise.then(function(companyList){
            	 var allcomp = [{'companyId':undefined,'companyName':$is3n("全部{%=common.company%}",config.custid)}];
            	 $scope.companyList = allcomp.concat(companyList);
            });
    	}
    }

  //切换分公司
    $scope.changeCompany = function(company){
        $scope.currentCompany = company;
        loadData();
        $modal.action({id:'company-action',act:'close'});
    };
    
    function getTime(number){
        var now = new Date();
        var date;
        if(number>180){
     	   date = new Date(number);
        }else{
     	   date = new Date(now.getTime()-number*24*3600*1000);
        }
        var year = date.getFullYear()
        var month = date.getMonth()+1;
        if(month > 12) month = 1;
        var day = date.getDate();
        if(month < 10)
            month = "0"+month;
        if(day < 10)
            day = "0"+day;
        return year +'-'+month+'-'+day
    }
    
    
   //筛选/过滤器
   $scope.clearnFilter = function(){
       $scope.filter = {};
       loadData();
   };

   $scope.changeFilter=function(){
       loadData();
   };

   $scope.changeTime = function(newTime){
       $scope.showDropdown = false;
       $scope.filter.start_date = getTime(newTime);
       $scope.changeFilter();
   };

    $scope.changeTimeauto = function(start,end){
    	$modal.action({id:'changetime-action',act:'open'});
    };

    $scope.searchTimeauto = function(start,end){
    	var startDate = new Date(start);
    	var endDate = new Date(end);
    	if(startDate.valueOf() >endDate.valueOf()){
    		$modal.alert("起始日期不能大于结束日期")
    	}else{
    		startDate = getTime(startDate.valueOf()) === 'NaN-NaN-NaN' ? undefined:getTime(startDate.valueOf());
    		$scope.filter.start_date =startDate;
            $scope.filter.end_date =  getTime(endDate.valueOf());
            $scope.changeFilter();
    	}
    	$modal.action({id:'changetime-action',act:'close'});
    };
    
    $scope.jumpToDetail = function(receiptId){
    	$state.go("receipt.receiptDetail",{"receiptId":receiptId,"readMore":"readMore"});
    	
    }
    
    
    
    
    //输入关键字搜索
    $scope.closeSearch = function(){
		$scope.showSearchBody = false;
	}
	$scope.showSearch = function(){
		$scope.searchHistory = $istore.getLocal(config.custid+"_receiptSearchHistory_"+$rootScope.currentUser.UserEntitycustomId) ||[];        	       
		$scope.showSearchBody = true;
	}
    $scope.keySearch = function(keyValue){
    	$scope.searchVal = keyValue;
    	
        loadData();
        var myScroll = $scope.myScroll;
        $scope.showSearchBody = false;   
        saveSearchHistory(keyValue);
    };
    //点击按钮清空搜索内容
    $scope.clickClean = function($event){
    	$event.stopPropagation();
    	$scope.searchVal = "";
    	if(!$scope.showSearchBody){
    		loadData();
    	}
    };
    function saveSearchHistory(keyValue){
    	if(keyValue === null ||　keyValue === "")return;
        var hisstring = $istore.getLocal(config.custid+"_receiptSearchHistory_"+$rootScope.currentUser.UserEntitycustomId) ||[];
        var dup = false;
        hisstring.forEach(function(item){
        	if(item === keyValue)
        		dup = true;
        })
        if(!dup){
        	if(hisstring.length < 10){
        		hisstring.unshift(keyValue);
            }else{
            	hisstring.pop();
            	hisstring.unshift(keyValue)
            }
            $istore.setLocal(config.custid+"_receiptSearchHistory_"+$rootScope.currentUser.UserEntitycustomId,hisstring);
        }
    }
    function refresh(){
    	$timeout(function(){
            var myScroll = $scope.myScroll;
            if($scope.page == 0)
            	myScroll.scrollTo(0,0);
            myScroll.refresh();
    	},501)
    }
}]);


angular.module("myApp").controller("receiptDetailCtrl",["$rootScope",'$location','$anchorScroll',"$scope",'$state','$stateParams','$modal','ReceiptService','UserInfoService',
                                    function ($rootScope,$location,$anchorScroll,$scope,$state,$stateParams,$modal,ReceiptService,UserInfoService) {
    //取得传过来的参数
    var receiptId = $stateParams.receiptId;
    $scope.readMore=$stateParams.readMore;
    	
    $scope.info = {}
    loadData();
    
    function loadData(){
    	var promise = ReceiptService.getSkPaymentInfo(receiptId);
        promise.then(function(result){
        	if(result.status == "000"){
        		result.detail.payAmt = result.detail.payAmt != null && result.detail.payAmt != undefined ? (Number(result.detail.payAmt).moneyFormat(typeArray[3])).money() : '' ;
        		result.detail.residualAmt = result.detail.residualAmt != null && result.detail.residualAmt != undefined ? (Number(result.detail.residualAmt).moneyFormat(typeArray[3])).money() : '' ;
    			$scope.detail = result.detail;
    			$scope.dataList = processData(result.skPaymentReceiptList.dataList);
    			$scope.claimPrice = $scope.detail.residualAmt.replace(/,/g,"");
    		} else {
    			location.href="error.html";
    			
    		}
        });
    }
    
    function processData(dataList){
    	dataList.forEach(function(data){
        	for (var key in data){
          	   if(key == "receiptAmt"){
          		 data[key] != null && data[key] != undefined ? data[key] = (Number(data[key]).moneyFormat(typeArray[3])).money() : data[key]='' ;
          	   }
			}
        });
		return dataList;
    }

   //控制可修改单价的保留小数位数
    $scope.price_bitLength = typeArray[3].bitLength;
    //单据认领事件
    $scope.claim = function(info,claimPrice){
    	if(claimPrice == "" || claimPrice <= 0){
    		$modal.alert("所填写的认领金额必须大于0！");
    		return;
    	}
    	try {
    		if(Number(claimPrice) > Number($scope.detail.residualAmt.replace(/,/g,""))){
    			$modal.alert("所填写的认领金额不能大于待认领总金额！");
    			return;
    		}
    	} catch (err){
    		$modal.alert("输入非法金额！");
			return;
    	}
    	var params = info;
    	params.receiptAmt = claimPrice;
    	params.paymentNo = $scope.detail.paymentNo;
    	
    	$modal.confirm("认领收款单","确定认领该笔金额￥"+claimPrice+"?",function (e){
    		var promise = ReceiptService.saveSkPaymentReceipt(params);
    		promise.then(function(result){
    			if(result.status == "000"){
    				$modal.alert("<i class='iconfont claim_duigou skin-padding-right icon-duigou1 skin-color'></i>认领成功！",function(){
    					window.location.reload();
    				})
                }else{
                	$modal.alert("认领失败，请联系管理员！")
                }
    		})
    	}.bind({"params":params}))		
    }
}]);
